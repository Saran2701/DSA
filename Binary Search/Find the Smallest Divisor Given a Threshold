Find the Smallest Divisor Given a Threshold

Given an array of integers nums and an integer threshold, 
we will choose a positive integer divisor, divide all the array by it,
and sum the division's result. Find the smallest divisor such that the 
result mentioned above is less than or equal to threshold.


Example 1:

Input: nums = [1,2,5,9], threshold = 6
Output: 5
Explanation: We can get a sum to 17 (1+2+5+9) if the divisor is 1. 
If the divisor is 4 we can get a sum of 7 (1+1+2+3) and if the divisor is 5 the sum will be 5 (1+1+1+2). 

Example 2:
Input: nums = [44,22,33,11,1], threshold = 5
Output: 44



Code:
class Solution {
    public int smallestDivisor(int[] nums, int threshold) {
        int low = 1;
        int high = 1000000;
        //int res = Integer.MAX_VALUE;
        while(low<=high){
            int mid = (low+high)/2;
            if(find(nums,mid,threshold)){
               // res = Math.min(res,mid);
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return low;
    }
    static boolean find(int nums[] , int divisor , int t){
        int tot=0;
        for(int i=0;i<nums.length;i++){
            tot += Math.ceil((double)nums[i]/(double)divisor);
        }
        return tot<=t;
    }
}


Complexity:
Time Complexity:  O(nâ‹…log(max(nums)))
Space Complexity:  O(1)
